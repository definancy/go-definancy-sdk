openapi: "3.0.1"
info:
  title: Definancy SDK
  version: 0.0.1.wip.20250411
  description: |-
    REST API for managing asset, network and contract configurations and management, and vault-based financial operations.

tags:
  - name: Probe
    description: |-
      Health monitoring endpoints for verifying service availability and operational status.
  - name: Network
    description: |-
      Network configuration and status management.
  - name: Asset
    description: |-
      Asset configuration and status management.
  - name: Contract
    description: |-
      Contract configuration and status management.
  - name: Vault
    description: |-
      Vault configuration and status management.
  - name: Vault/Contract Subscription
    description: |-
      Management of vault contract associations within vaults.
  - name: Vault/Estimate
    description: |-
      Payment estimation for vault-based financial operations.
  - name: Vault/Payment Collection
    description: |-
      Payment processing and transaction management for vault-based financial operations.

paths:
  # Probe
  /api/v1/healthy:
    get:
      operationId: HealthyCheck
      summary: Health Check
      description: |-
        Returns Ok if healthy (liveness). 
      tags:
        - Probe
      responses:
        '200':
          content: {}
          description: |-
            OK.
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        default:
          content: {}
          description: |-
            Unknown Error.
  /api/v1/ready:
    get:
      operationId: ReadyCheck
      summary: Ready Check
      description: |-
        Returns OK if ready (readyness).
      tags:
        - Probe
      responses:
        '200':
          content: {}
          description: |-
            OK.
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        default:
          content: {}
          description: |-
            Unknown Error.

  # Network
  /api/v1/network/{NetworkId}:
    get:
      operationId: GetNetwork
      summary: Get Network
      description: |-
        View information about a specific network.
      tags:
        - Network
      parameters:
        - $ref: "#/components/parameters/NetworkId"
      responses:
        '200':
          description: |-
            Information about the network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to view the network information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    put:
      operationId: ConfigNetwork
      summary: Config Network
      description: |-
        Configures a Network.
      tags:
        - Network
      parameters:
        - $ref: "#/components/parameters/NetworkId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConfig'
        required: true
      responses:
        '200':
          description: |-
            Network configured with success.
            Returns the updated configuration for the network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the network configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.

  # Asset
  /api/v1/asset/{AssetUnit}:
    get:
      operationId: GetAsset
      summary: Get Asset
      description: |-
        View information about a specific asset.
      tags:
        - Asset
      parameters:
        - $ref: "#/components/parameters/AssetUnit"
      responses:
        '200':
          description: |-
            Information about the asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to view the asset information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    put:
      operationId: ConfigAsset
      summary: Config Asset
      description: |-
        Configures an Asset.
      tags:
        - Asset
      parameters:
        - $ref: "#/components/parameters/AssetUnit"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetConfig'
        required: true
      responses:
        '200':
          description: |-
            Asset configured with success.
            Returns the updated configuration for the asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the asset configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.

  # Contract
  /api/v1/contract/{AssetUnit}/{NetworkId}:
    get:
      operationId: GetContract
      summary: Get Contract
      description: |-
        View information about a specific contract.
      tags:
        - Contract
      parameters:
        - $ref: "#/components/parameters/AssetUnit"
        - $ref: "#/components/parameters/NetworkId"
      responses:
        '200':
          description: |-
            Information about the contract.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to view the contract information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    put:
      operationId: ConfigContract
      summary: Config Contract
      description: |-
        Configures a Contract.
      tags:
        - Contract
      parameters:
        - $ref: "#/components/parameters/AssetUnit"
        - $ref: "#/components/parameters/NetworkId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractConfig'
        required: true
      responses:
        '200':
          description: |-
            Contract configured with success.
            Returns the updated configuration for the contract.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the contract configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
  
  # Vault
  /api/v1/vault/{VaultId}:
    get:
      operationId: GetVault
      summary: Get Vault
      description: |-
        View information about a specific vault.
      tags:
        - Vault
      parameters:
        - $ref: "#/components/parameters/VaultId"
      responses:
        '200':
          description: |-
            Information about the vault.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to view the vault information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    put:
      operationId: UpdateVault
      summary: Insert/Update Vault
      description: |-
        Creates the vault if it doesn't exist.
        Updates the vault configuration.
      tags:
        - Vault
      parameters:
        - $ref: "#/components/parameters/VaultId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultConfig'
        required: true        
      responses:
        '200':
          description: |-
            Vault configured with success.
            Returns the updated configuration for the vault.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the vault configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    delete:
      operationId: ArchiveVault
      summary: Archive Vault
      description: |-
        Archives a vault.
      tags:
        - Vault
      parameters:
        - $ref: "#/components/parameters/VaultId"
      responses:
        '200':
          description: |-
            Vault archived with success.
            Returns the updated configuration for the vault.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the vault configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.

  # Vault/Contract Subscription
  /api/v1/vault/{VaultId}/contract/{AssetUnit}/{NetworkId}:
    put:
      operationId: VaultSubscribeContract
      summary: Subscribes a Contract for Vault
      description: |-
        Subscribe a contract in the context of a vault.
      tags:
        - Vault/Contract Subscription
      parameters:
        - $ref: "#/components/parameters/VaultId"
        - $ref: "#/components/parameters/AssetUnit"
        - $ref: "#/components/parameters/NetworkId"
      responses:
        '200':
          description: |-
            Vault subscribed contract with success.
            Returns the updated configuration for the vault.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the vault configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    delete:
      operationId: VaultUnsubscribeContract
      summary: Unsubscribes a Contract for Vault
      description: |-
        Unsubscribe a contract in the context of a vault.
      tags:
        - Vault/Contract Subscription
      parameters:
        - $ref: "#/components/parameters/VaultId"
        - $ref: "#/components/parameters/AssetUnit"
        - $ref: "#/components/parameters/NetworkId"
      responses:
        '200':
          description: |-
            Vault unsubscribed contract with success.
            Returns the updated configuration for the vault.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update the vault configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
  
  # Vault/Estimate
  /api/v1/vault/{VaultId}/estimate:
    post:
      operationId: VaultGetEstimate
      summary: Get Estimate for Vault
      description: |-
        Create a new estimate.
      tags:
        - Vault/Estimate
      parameters:
        - $ref: "#/components/parameters/VaultId"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContractAmount'
              minItems: 1
        required: true
      responses:
        '200':
          description: |-
            Information about the asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate'
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to generate estimates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.

  # Vault/Payment Collection
  /api/v1/vault/{VaultId}/payment-collection:
    post:
      operationId: CreatePaymentCollection
      summary: Create Payment Collection
      description: |-
        Create a new payment collection.
      tags:
        - Vault/Payment Collection
      parameters:
        - $ref: "#/components/parameters/VaultId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCollectionConfig'
        required: true
      responses:
        '200':
          description: |-
            Information about the new payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCollection'
        '400':
          description: |-
            A list of errors that occurred when creating a payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to add new payments collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
  /api/v1/vault/{VaultId}/payment-collection/{PaymentCollectionId}:
    get:
      operationId: GetPaymentCollection
      summary: Get Payment Collection
      description: |-
        View information about the existing payment collection.
      tags:
        - Vault/Payment Collection
      parameters:
        - $ref: "#/components/parameters/VaultId"
        - $ref: "#/components/parameters/PaymentCollectionId"
      responses:
        '200':
          description: |-
            Information about the payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCollection'
          headers:
            Cache-Control: 
              schema:
                type: string
                enum:
                  - no-store
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to view payments collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    put:
      operationId: UpdatePaymentCollection
      summary: Update Payment Collection
      description: |-
        Update a payment collection.
      tags:
        - Vault/Payment Collection
      parameters:
        - $ref: "#/components/parameters/VaultId"
        - $ref: "#/components/parameters/PaymentCollectionId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCollectionConfig'
        required: true
      responses:
        '200':
          description: |-
            Information about the updated payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCollection'
        '400':
          description: |-
            A list of errors that occurred when updating the payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to update payments collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.
    delete:
      operationId: ArchivePaymentCollection
      summary: Archive a Payment Collection
      description: |-
        Archive a payment collection.
      tags:
        - Vault/Payment Collection
      parameters:
        - $ref: "#/components/parameters/VaultId"
        - $ref: "#/components/parameters/PaymentCollectionId"
      responses:
        '200':
          description: |-
            Information about the archived payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCollection'
        '400':
          description: |-
            A list of errors that occurred when archiving the payment collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '401':
          description: |-
            Missing authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '403':
          description: |-
            You are authenticated but forbidden to archive payments collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: |-
            Unknown Error.

components:
  parameters:
    'NetworkId':
      in: path
      name: NetworkId
      schema:
        $ref: "#/components/schemas/NetworkId"
      required: true
    'AssetUnit':
      in: path
      name: AssetUnit
      schema:
        $ref: "#/components/schemas/AssetUnit"
      required: true
    'VaultId':
      in: path
      name: VaultId
      schema:
        $ref: "#/components/schemas/VaultId"
      required: true
    'PaymentCollectionId':
      in: path
      name: PaymentCollectionId
      schema:
        $ref: "#/components/schemas/PaymentCollectionId"
      required: true

  schemas:
    # Common
    'Name':
      type: string
      description: |-
        Human-readable identifier following naming conventions.
      pattern: '^([a-zA-Z]+[a-zA-Z0-9]*)+([ -][a-zA-Z]+([0-9]*[a-zA-Z])*)*$' #to-do
      minLength: 1
      maxLength: 32
    'Address':
      type: string
      description: |-
        Blockchain address format for specific network.
      minLength: 1
      maxLength: 64
    'Amount':
      type: string
      description: |-
        Describes an amount.
      pattern: '^[0-9]+$'
      minLength: 1
      maxLength: 78
    'Decimals':
      type: integer
      description: |-
        The number of digits to use after the decimal point when displaying an amount.
      minimum: 0
      maximum: 77
    'Timestamp':
      type: integer
      description: |-
        UNIX timestamp in milliseconds for event tracking.
    'Enabled':
      type: boolean
      description: |-
        True when the resource is enabled.
    'URL':
      type: string
      description: |-
        Valid HTTP/HTTPS URL for external resource references.

    # Error
    'Error':
      type: object
      description: |-
        An error message with a typified code.
      properties:
        'code':
          type: string
          pattern: '^[a-zA-Z]{3}-[0-9]{3}$'
          minLength: 7
          maxLength: 7
        'message':
          type: string
          minLength: 1
          maxLength: 256
      required:
        - 'code'
        - 'message'
    'ErrorList':
      type: array
      description: |-
        List of Error Messages.
      items:
        $ref: '#/components/schemas/Error'
      maxItems: 16

    # Network
    'NetworkId':
      type: string
      description: |-
        The string that unequivocally identifies a network.
      pattern: '^[a-zA-Z]*$'
      minLength: 3
      maxLength: 32
    'NetworkStatus':
      type: string
      enum:
        - 'active'
        - 'inactive'
        - 'discontinued'
    'NetworkInfo':
      type: object
      description: |-
        Additional context of the network.
      properties:
        'name':
          $ref: '#/components/schemas/Name'
        'image':
          $ref: '#/components/schemas/URL'
        'website':
          $ref: '#/components/schemas/URL'
        'status':
          $ref: '#/components/schemas/NetworkStatus'
        'created-at':
            $ref: '#/components/schemas/Timestamp'
        'updated-at':
            $ref: '#/components/schemas/Timestamp'
      required:
        - 'name'
        - 'status'
        - 'created-at'
        - 'updated-at'
    'NetworkConfig':
      type: object
      description: |-
        Configuration properties for a network.
      properties:
        'enabled':
          $ref: '#/components/schemas/Enabled'
      required:
        - 'enabled'
    'Network':
      type: object
      description: |-
        Network information and configuration.
      properties:
        'id':
          $ref: '#/components/schemas/NetworkId'
        'info':
          $ref: '#/components/schemas/NetworkInfo'
        'config':
          $ref: '#/components/schemas/NetworkConfig'
      required:
        - 'id'
        - 'info'
        - 'config'

    # Asset
    'AssetUnit':
      type: string
      description: |-
        The name of unit of this asset.
      pattern: '^[a-zA-Z]{3,}$' #to-do
      minLength: 3
      maxLength: 8
    'AssetStatus':
      type: string
      enum:
        - 'active'
        - 'inactive'
        - 'discontinued'
    'AssetInfo':
      type: object
      description: |-
        Additional context of the asset.
      properties:
        'name':
          $ref: '#/components/schemas/Name'
        'status':
          $ref: '#/components/schemas/AssetStatus'
        'image':
          $ref: '#/components/schemas/URL'
        'website':
          $ref: '#/components/schemas/URL'
        'created-at':
            $ref: '#/components/schemas/Timestamp'
        'updated-at':
            $ref: '#/components/schemas/Timestamp'
      required:
        - 'name'
        - 'status'
        - 'created-at'
        - 'updated-at'
    'AssetConfig':
      type: object
      description: |-
        Configuration properties for an asset.
      properties:
        'enabled':
          $ref: '#/components/schemas/Enabled'
      required:
        - 'enabled'
    'Asset':
      type: object
      description: |-
        Asset information and configuration.
      properties:
        'unit':
          $ref: '#/components/schemas/AssetUnit'
        'info':
          $ref: '#/components/schemas/AssetInfo'
        'config':
          $ref: '#/components/schemas/AssetConfig'
      required:
        - 'unit'
        - 'info'
        - 'config'

    # Contract
    'ContractId':
      type: object
      description: |-
        Contract identifier.
        Assets can operate across multiple networks, while networks can host multiple assets.
        This identifier encodes the asset-network relationship, functioning as a protocol-agnostic anchor for transactions and validation.
      properties:
        'asset-unit':
          $ref: '#/components/schemas/AssetUnit'
        'network-id':
          $ref: '#/components/schemas/NetworkId'
      required:
        - 'asset-unit'
        - 'network-id'
    'ContractStatus':
      type: string
      enum:
        - 'active'
        - 'inactive'
        - 'discontinued'
    'ContractInfo':
      type: object
      description: |-
        Additional context of the contract.
      properties:
        'asset':
          $ref: '#/components/schemas/Asset'
        'network':
          $ref: '#/components/schemas/Network'
        'address':
          $ref: '#/components/schemas/Address'
        'decimals':
          $ref: '#/components/schemas/Decimals'
        'status':
          $ref: '#/components/schemas/ContractStatus'
        'created-at':
            $ref: '#/components/schemas/Timestamp'
        'updated-at':
            $ref: '#/components/schemas/Timestamp'
      required:
        - 'asset'
        - 'network'
        - 'address'
        - 'decimals'
        - 'status'
        - 'created-at'
        - 'updated-at'
    'ContractConfig':
      type: object
      description: |-
        Configuration properties for a contract.
      properties:
        'enabled':
          $ref: '#/components/schemas/Enabled'
      required:
        - 'enabled'
    'Contract':
      type: object
      description: |-
        Contract information and configuration.
      properties:
        'contract-id':
          $ref: '#/components/schemas/ContractId'
        'info':
          $ref: '#/components/schemas/ContractInfo'
        'config':
          $ref: '#/components/schemas/ContractConfig'
      required:
        - 'contract-id'
        - 'info'
        - 'config'
    'ContractAmount':
      type: object
      description: |-
        Represents a quantified contract interaction with amount validation.
      properties:
        'contract-id':
          $ref: '#/components/schemas/ContractId'
        'amount':
          $ref: '#/components/schemas/Amount'
        'decimals':
          $ref: '#/components/schemas/Decimals'
      required:
        - 'contract-id'
        - 'amount'
        - 'decimals'

    # Vault
    'VaultId':
      type: string
      description: |-
        The string that unequivocally identifies a vault.
      pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9\-]*$'
      minLength: 1
      maxLength: 36
    'VaultInfo':
      type: object
      description: |-
        Additional context of the vault.
      properties:
        'archived-at':
            $ref: '#/components/schemas/Timestamp'
        'contracts':
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        'created-at':
            $ref: '#/components/schemas/Timestamp'
        'updated-at':
            $ref: '#/components/schemas/Timestamp'
      required:
        - 'contracts'
        - 'created-at'
        - 'updated-at'
    'VaultConfig':
      type: object
      description: |-
        Configuration properties for a contract.
        If the update request omits an optional property, that property will maintain it's current value.
      properties:
        'contract-ids':
          type: array
          items:
            $ref: '#/components/schemas/ContractId'
        'enabled':
          $ref: '#/components/schemas/Enabled'
      required:
        - 'contract-ids'
        - 'enabled'
    'Vault':
      type: object
      description: |-
        Vault information and configuration.
      properties:
        'id':
          $ref: '#/components/schemas/VaultId'
        'info':
          $ref: '#/components/schemas/VaultInfo'
        'config':
          $ref: '#/components/schemas/VaultConfig'
      required:
        - 'id'
        - 'info'
        - 'config'

    # Vault - Estimate
    'Estimate':
      type: object
      properties:
        'ts':
          $ref: '#/components/schemas/Timestamp'
        'scenarios':
          type: array
          items:
            $ref: '#/components/schemas/EstimateScenario'
    'EstimateScenario':
      type: object
      description: |-
        Financial scenario calculation for transaction planning.
      properties:
        'price':
          $ref: '#/components/schemas/ContractAmount'
        'pay':
          $ref: '#/components/schemas/ContractAmount'
      required:
        - 'price'
        - 'pay'

    # Vault - Payment Collection
    'PaymentCollectionId':
      type: string
      description: |-
        Unequivocally identifies a payment collection.
    'PaymentCollectionOrder':
      type: object
      description: |-
        Commercial order details.
      properties:
        'id':
          type: string
          description: |-
            Order identifier.
        'description':
          type: string
          description: |-
            Human-readable order description.
        'schema':
          type: object
          description: |-
            Structured metadata format that allows the interpretation of the data property.
          additionalProperties: true
        'data':
          type: object
          description: |-
            Order data.
          additionalProperties: true
      required:
        - 'id'
    'PaymentCollectionConfig':
      type: object
      description: |-
        Payment collection parameters including pricing models and compliance requirements.
      properties:
        'order':
          $ref: '#/components/schemas/PaymentCollectionOrder'
        'price-scenarios':
          type: array
          items:
            $ref: '#/components/schemas/ContractAmount'
        'compliance-stuff': #to-do
          type: string
          description: |-
            Compliance verification data.
      required:
        - 'price-scenarios'
    'PaymentCollection':
      type: object
      description: |-
        Complete payment collection record with status tracking.
      properties:
        'id':
          $ref: '#/components/schemas/PaymentCollectionId'
        'info':
          type: object
          properties:
            'status':
              $ref: '#/components/schemas/PaymentCollectionStatus'
            'scenarios':
              type: array
              items:
                $ref: '#/components/schemas/PaymentCollectionScenario'
            'created-at':
              $ref: '#/components/schemas/Timestamp'
            'updated-at':
              $ref: '#/components/schemas/Timestamp'
          required:
            - 'status'
            - 'scenarios'
            - 'created-at'
            - 'updated-at'
        'config':
          $ref: '#/components/schemas/PaymentCollectionConfig'
      required:
        - 'id'
        - 'info'
        - 'config'
    'PaymentCollectionStatus':
      type: string
      description: |-
        Lifecycle state of a payment collection process.
      enum:
        - 'compliance'
        - 'waiting'
        - 'confirming'
        - 'confirmed'
        - 'expired'
        - 'cancelled'
    'PaymentCollectionScenario':
      type: object
      description: |-
        Individual payment scenario with execution details.
      properties:
        'price':
          $ref: '#/components/schemas/ContractAmount'
        'pay':
          $ref: '#/components/schemas/ContractAmount'
        'address':
          $ref: '#/components/schemas/Address'
        'expire-at':
          $ref: '#/components/schemas/Timestamp'
        'status':
          $ref: '#/components/schemas/PaymentCollectionScenarioStatus'
        'received':
          $ref: '#/components/schemas/ContractAmount'
        'transaction-list':
          type: array
          items:
            $ref: '#/components/schemas/BlockchainTransaction'
      required:
        - 'price'
        - 'pay'
        - 'address'
        - 'expire-at'
        - 'status'
    'PaymentCollectionScenarioStatus':
      type: string
      description: |-
        Execution state of a payment scenario.
      enum:
        - 'compliance'
        - 'waiting'
        - 'confirming'
        - 'confirmed'
        - 'expired'
        - 'refunding'
        - 'refunded'

    # Blockchain
    'BlockchainTransactionId':
      type: string
      description: |-
        Unique blockchain transaction identifier (txid/hash).
    'BlockchainTransactionStatus':
      type: string
      description: |-
        Validation state of blockchain transaction.
      enum:
        - 'compliance'
        - 'waiting'
        - 'confirming'
        - 'confirmed'
    'BlockchainTransaction':
      type: object
      description: |-
        Record of blockchain transaction with validation status.
      properties:
        'id':
          $ref: '#/components/schemas/BlockchainTransactionId'
        'ts':
          $ref: '#/components/schemas/Timestamp'
        'sender':
          $ref: '#/components/schemas/Address'
        'receiver':
          $ref: '#/components/schemas/Address'
        'amount':
          $ref: '#/components/schemas/ContractAmount'
        'status':
          $ref: '#/components/schemas/BlockchainTransactionStatus'
        'remaining-confirmations':
          type: integer
          description: |-
            Number of confirmations left until the transaction acceptance.
          minimum: -1
          maximum: 65535
      required:
        - 'id'
        - 'ts'
        - 'sender'
        - 'receiver'
        - 'amount'
        - 'status'
        - 'remaining-confirmations'
